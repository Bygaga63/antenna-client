{"version":3,"sources":["service/AuthService.js","actions/securityActions.js","actions/types.js","global/history.js","components/Layout/Header.js","reducers/errorReducer.js","reducers/securityReducer.js","reducers/userReducer.js","reducers/breakdownTypeReducer.js","reducers/areaReducer.js","reducers/tasksReducer.js","reducers/reportReducer.js","reducers/index.js","store.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","components/Spinner.js","actions/userActions.js","actions/breakdownTypeActions.js","actions/areaActions.js","components/modal/add/AddModal.js","components/modal/edit/EditModal.js","hoc/listWithData.js","components/DataList.js","components/Settings.js","hoc/SecureRoute.js","actions/taskAction.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddTask.js","components/ProjectBoard/ProjectTasks/UpdateTask.js","components/UserManagement/EditUser.js","components/ReportSettings.js","global/settings.js","components/Report.js","actions/reportActions.js","components/ClosedTasks.js","components/Addresses.js","App.js","registerServiceWorker.js","index.js"],"names":["AuthService","setJWTToken","token","console","log","axios","defaults","headers","common","localStorage","jwtToken","undefined","setItem","logout","dispatch","removeItem","type","payload","createBrowserHistory","Header","this","props","history","push","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","react_default","a","createElement","className","id","Link","to","fullName","role","onClick","bind","userIsNotAuthenticated","data-toggle","data-target","Component","connect","state","initialState","combineReducers","errors","arguments","length","action","reports","_ref","tasks","find","task","map","concat","Object","toConsumableArray","users","filter","breakdownType","breakdown","area","objectSpread","initalState","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","apply","Landing","Register","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","username","password","confirmPassword","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","preventDefault","newUser","createNewUser","target","name","defineProperty","value","classnames","is-invalid","placeholder","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","post","t0","response","data","stop","_x","Login","LoginRequest","login","_ref3","_callee3","res","decoded","_context3","sent","jwt_decode","_x3","CustomSpinner","Spinner","animation","variant","getUsers","roleParam","get","abrupt","removeUser","_ref2","_callee2","_context2","delete","_x2","getBreakdownTypes","removeBreakdownType","addBreakdownType","editBreakdownType","_ref4","_callee4","_context4","put","_x4","getAreas","removeArea","addArea","caption","editArea","AddModal","itemField","otherProps","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","Modal","assign","size","aria-labelledby","centered","closeButton","Title","Body","Form","onHide","InputGroup","FormControl","required","Append","Button","EditModal","getParamName","onButtonClick","_this$props","editItem","paramName","_this$props2","defaultValue","React","listWithData","active","WithData","_React$Component","_getPrototypeOf2","_len","args","Array","_key","showAddModal","showEditModal","toggleAddModal","toggleEditModal","item","inherits","createClass","key","getData","update","onDelete","addModal","button","editModal","_this$state","add_AddModal","show","edit_EditModal","block","_this$update2","Fragment","components_Spinner","DataListItem","ListGroup","Item","style","display","justifyContent","alignItems","color","aria-hidden","stopPropagation","DataList","as","DataList_DataListItem","Settings","titles","setActive","ResultList","Container","Row","Col","xs","Settings_SettingsMenu","SettingsMenu","Settings_SettingsMenuItem","SettingsMenuItem","component","Route","render","Redirect","getTaskList","closed","err","updateTask","Task","getUserName","finalString","priorityClass","_this$props$task$cust","customer","address","flatNumber","street","house","priority","marginBottom","onCloseClick","Backlog","ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","BoardContent","projectNotFound","projectIdentifier","ProjectBoard_Backlog","boardAlgorithm","react","marginRight","AddTask","handleChangeBreakdown","handleChangeUsers","convertOptionToArea","choose","result","elem","parseInt","convertOptionToBreakdown","breakdownChooseList","forEach","chooseBreakdown","convertOptionToUsers","userChooseList","chooseUser","breakdownToOptions","breakdowns","label","userToOptions","getCustomer","phone","toggleCalendar","isOpen","formatDate","date","day","getDate","monthIndex","getMonth","year","getFullYear","handleChangeDate","dueDate","Date","newTask","addTask","react_select_esm","options","isMulti","react_datepicker_es","selected","dateFormat","locale","ru","withPortal","inline","onClickOutside","PureComponent","UpdateTask","customerId","addressId","match","params","getTask","_this2","_task$customer","createAt","taskId","EditUser","u","editUser","ReportSettings","getStartDate","setMonth","start","end","isOpenStart","isOpenEnd","unshift","handleChangeStartDate","toggleCalendarStart","handleChangeEndDate","toggleCalendarEnd","reportSettings","btoa","JSON","stringify","Group","controlId","Label","column","sm","CONFIG","URL","Report","report","statusConverter","getReports","reportId","parse","atob","_customer$address","Table","bordered","striped","responsive","align","colSpan","breakType","join","marginTop","downloadReports","disabled","Badge","reportInfo","link","document","download","href","click","ClosedTasks","Addresses","fetchData","downloadResult","then","_this3","baseURL","decoded_jwtToken","currentTime","now","exp","App","es","HashRouter","Layout_Header","exact","path","Switch","SecureRoute","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","src_App_0","getElementById","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b18d83d9.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst AuthService = {\n  setJWTToken: token => {\n    console.log('setJWTToken');\n    if (token) {\n      axios.defaults.headers.common[\"Authorization\"] = token;\n      if (localStorage.jwtToken === null || localStorage.jwtToken === undefined) {\n        localStorage.setItem(\"jwtToken\", token);\n      }\n    } else {\n      delete axios.defaults.headers.common[\"Authorization\"];\n    }\n  }\n}\n\nexport default AuthService;\n","import axios from \"axios\";\nimport {EDIT_USER, GET_ERRORS, SET_CURRENT_USER} from \"./types\";\nimport AuthService from \"../service/AuthService\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n    history.push(\"/settings\")\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const editUser = (user) => async dispatch => {\n  try {\n    await axios.put(\"/api/users\", user);\n    dispatch({\n      type: EDIT_USER,\n      payload: user\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    AuthService.setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\n// export const loadUser\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  AuthService.setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_AREAS = \"GET_AREAS\";\nexport const GET_BREAKDOWN_TYPES = \"GET_BREAKDOWN_TYPES\";\nexport const EDIT_BREAKDOWN_TYPE = \"EDIT_BREAKDOWN_TYPE\";\n\nexport const REMOVE_USER = \"REMOVE_USER\";\nexport const ADD_USER = \"ADD_USER\";\nexport const EDIT_USER = \"EDIT_USER\";\nexport const REMOVE_AREA = \"REMOVE_AREA\";\nexport const ADD_AREA = \"ADD_AREA\";\nexport const EDIT_AREA = \"EDIT_AREA\";\nexport const REMOVE_BREAKDOWN_TYPE = \"REMOVE_BREAKDOWN_TYPE\";\nexport const ADD_BREAKDOWN_TYPE = \"ADD_BREAKDOWN_TYPE\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_TASK_LIST = \"GET_TASK_LIST\";\nexport const GET_TASK = \"GET_TASK\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const GET_REPORT = \"GET_REPORT\";\nexport const UPDATE_TASK = \"UPDATE_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n\r\n  /* pass a configuration object here if needed */\r\n})\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\nimport history from \"../../global/history\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    history.push(\"/\");\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Заявки\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard/closed\">\n              Закрытые заявки\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n\n          {user.role !== \"USER\" && <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/settings\">\n              <i className=\"fa fa-cogs mr-1\" />\n               Настройки\n            </Link>\n          </li> }\n\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Выход\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            {/*<Link className=\"nav-link\" to=\"/register\">*/}\n              {/*Регистрация*/}\n            {/*</Link>*/}\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Войти\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Антенная служба\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import {EDIT_USER, GET_USERS, REMOVE_USER} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n  switch (type) {\r\n    case GET_USERS:\r\n      return payload\r\n\r\n    case EDIT_USER:\r\n      return state.map(user => {\r\n        if (user.id === payload.id) {\r\n          return payload;\r\n        }\r\n        return user;\r\n      })\r\n\r\n    case REMOVE_USER:\r\n      return state.filter(\r\n        user => user.id !== payload.id\r\n      )\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_BREAKDOWN_TYPE, GET_BREAKDOWN_TYPES, REMOVE_BREAKDOWN_TYPE} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BREAKDOWN_TYPES:\r\n      return action.payload\r\n\r\n    case ADD_BREAKDOWN_TYPE:\r\n      return [\r\n        ...state, action.payload\r\n      ];\r\n\r\n\r\n    case REMOVE_BREAKDOWN_TYPE:\r\n      return state.filter(\r\n        breakdown => breakdown.id !== action.payload.id\r\n      )\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_AREA, GET_AREAS, REMOVE_AREA} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_AREAS:\r\n      return action.payload\r\n\r\n    case ADD_AREA:\r\n      return [\r\n        ...state, action.payload\r\n      ];\r\n\r\n    case REMOVE_AREA:\r\n      return state.filter(\r\n        area => area.id !== action.payload.id\r\n      )\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {ADD_TASK, GET_TASK, GET_TASK_LIST, UPDATE_TASK} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n  switch (type) {\r\n    case GET_TASK_LIST:\r\n      return payload;\r\n\r\n    case GET_TASK:\r\n      if (state.find(task => task.id === payload.id)) {\r\n        return state.map(task => {\r\n          if (task.id === payload.id) {\r\n            return payload;\r\n          }\r\n          return task;\r\n        })\r\n      }\r\n      return [...state, payload];\r\n\r\n    case ADD_TASK:\r\n      return [...state, payload];\r\n\r\n    case UPDATE_TASK:\r\n      return state.map(task => {\r\n\r\n        if (task.id === payload.id) {\r\n          return payload;\r\n        }\r\n\r\n        return task;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {GET_REPORT} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, {type, payload}) {\r\n  switch (type) {\r\n    case GET_REPORT:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport securityReducer from \"./securityReducer\";\nimport userReducer from \"./userReducer\";\nimport breakdownTypeReducer from \"./breakdownTypeReducer\";\nimport areaReducer from \"./areaReducer\";\nimport tasksReducer from \"./tasksReducer\";\nimport reportReducer from \"./reportReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  reports: reportReducer,\n  tasks: tasksReducer,\n  users: userReducer,\n  breakdownType: breakdownTypeReducer,\n  area: areaReducer,\n  security: securityReducer\n});\n\n\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Прием заявок\n                </h1>\n                <p className=\"lead\">\n                  Создаете учетную запись и приступайте к выполнению заявок\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Войти\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport {Link} from \"react-router-dom\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      role: \"USER\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n      role: this.state.role\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n\n    if (this.state.errors[e.target.name]) {\n      const errors = {...this.state.errors}\n      errors[e.target.name] = \"\";\n      this.setState({errors});\n    }\n\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/settings`}\n                className=\"btn btn-light\"\n              >\n                Назад к настройкам\n              </Link>\n              <h1 className=\"display-4 text-center\">Регистрация</h1>\n              <p className=\"lead text-center\">Создать аккаунт</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Имя\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Логин\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Пароль\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Подтверждение пароля\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"role\"\n                    value={this.state.role}\n                    onChange={this.onChange}\n                  >\n                    <option value={\"USER\"}>Монтажник</option>\n                    <option value={\"ADMIN\"}>Диспетчер</option>\n                    <option value={\"OWNER\"}>Администратор</option>\n                  </select>\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    if (this.state.errors[e.target.name]) {\n      const errors = {...this.state.errors}\n      errors[e.target.name] = \"\";\n      this.setState({errors});\n    }\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Добро пожаловать!</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Логин\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Пароль\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nconst CustomSpinner = () => {\r\n  return (\r\n    <Spinner animation=\"border\" variant=\"primary\" />\r\n  );\r\n};\r\n\r\nexport default CustomSpinner;\r\n","import {GET_USERS, REMOVE_USER} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getUsers = (role) => async dispatch => {\r\n  const roleParam = role ? \"?role=\" + role : \"\";\r\n  const res = await axios.get(\"/api/users\" + roleParam);\r\n  dispatch({\r\n    type: GET_USERS,\r\n    payload: res.data\r\n  });\r\n  return res.data;\r\n};\r\n\r\nexport const removeUser = (user) => async dispatch => {\r\n  const res = await axios.delete(\"/api/users/\" + user.id);\r\n  dispatch({\r\n    type: REMOVE_USER,\r\n    payload: user\r\n  });\r\n  return res.data;\r\n};\r\n","import {ADD_BREAKDOWN_TYPE, GET_BREAKDOWN_TYPES, REMOVE_BREAKDOWN_TYPE, EDIT_BREAKDOWN_TYPE} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getBreakdownTypes = () => async dispatch => {\r\n  const res = await axios.get(\"/api/breakdowns\");\r\n  dispatch({\r\n    type: GET_BREAKDOWN_TYPES,\r\n    payload: res.data\r\n  });\r\n  return res.data;\r\n};\r\n\r\n\r\nexport const removeBreakdownType = (breakdown) => async dispatch => {\r\n  const res = await axios.delete(\"/api/breakdowns/\" + breakdown.id);\r\n  dispatch({\r\n    type: REMOVE_BREAKDOWN_TYPE,\r\n    payload: breakdown\r\n  });\r\n  return res.data;\r\n};\r\n\r\n\r\nexport const addBreakdownType = (type) => async dispatch => {\r\n  const res = await axios.post(\"/api/breakdowns\", {type});\r\n  dispatch({\r\n    type: ADD_BREAKDOWN_TYPE,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\n\r\nexport const editBreakdownType = (type) => async dispatch => {\r\n  await axios.put(\"/api/breakdowns\", type);\r\n  dispatch({\r\n    type: EDIT_BREAKDOWN_TYPE,\r\n    payload: type\r\n  });\r\n};","import {ADD_AREA, EDIT_AREA, GET_AREAS, REMOVE_AREA} from \"./types\";\nimport axios from \"axios\";\n\n\nexport const getAreas = () => async dispatch => {\n  const res = await axios.get(\"/api/areas\");\n  dispatch({\n    type: GET_AREAS,\n    payload: res.data\n  });\n};\n\n\nexport const removeArea = (area) => async dispatch => {\n  const res = await axios.delete(\"/api/areas/\" + area.id);\n  dispatch({\n    type: REMOVE_AREA,\n    payload: area\n  });\n  return res.data;\n};\n\n\nexport const addArea = (caption) => async dispatch => {\n  const res = await axios.post(\"/api/areas\", {caption});\n  dispatch({\n    type: ADD_AREA,\n    payload: res.data\n  });\n};\n\nexport const editArea = (area) => async dispatch => {\n  await axios.put(\"/api/areas\", area);\n  dispatch({\n    type: EDIT_AREA,\n    payload: area\n  });\n};","import {Button, Modal, InputGroup, FormControl, Form} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\n\r\nconst AddModal = ({type, onClick, errors, itemField, ...otherProps}) => {\r\n  const [inputValue, setInputValue] = useState(null)\r\n\r\n  const onButtonClick = (e) => {\r\n    e.preventDefault();\r\n    onClick(inputValue)\r\n    otherProps.onHide()\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      {...otherProps}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Добавить новый {type}\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={onButtonClick}>\r\n          <InputGroup className=\"mb-3\">\r\n            <FormControl className={errors[itemField] && \"is-invalid\"} onChange={(e) => setInputValue(e.target.value)} required placeholder={type}/>\r\n            {errors[itemField] && (\r\n              <div className=\"invalid-feedback\">{errors[itemField]}</div>\r\n            )}\r\n            <InputGroup.Append>\r\n              <Button type=\"submit\" variant=\"primary\">Добавить</Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Form>\r\n\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddModal;","import {Button, Modal, InputGroup, FormControl, Form} from \"react-bootstrap\";\r\nimport React from \"react\";\r\n\r\nclass EditModal extends React.Component {\r\n  state = {\r\n    inputValue: \"\"\r\n  }\r\n\r\n  componentDidMount(){\r\n    const {editItem} = this.props;\r\n    const paramName = this.getParamName();\r\n    if (editItem) {\r\n      this.setState({inputValue: editItem[paramName]})\r\n\r\n    }\r\n  }\r\n  setInputValue = (e) => {\r\n    this.setState({inputValue: e.target.value})\r\n  }\r\n\r\n  getParamName = () => {\r\n    const {type} = this.props;\r\n    if (type === \"район\") {\r\n      return \"caption\"\r\n    } else if (type === \"тип поломки\") {\r\n      return \"type\"\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  onButtonClick = (e) => {\r\n    const {editItem, onHide} = this.props;\r\n    e.preventDefault();\r\n    const paramName = this.getParamName();\r\n    editItem[paramName] = this.state.inputValue;\r\n    this.props.onClick(editItem)\r\n    onHide();\r\n  }\r\n\r\n  render() {\r\n    const {type, onClick, editItem, ...otherProps} = this.props;\r\n    const paramName = this.getParamName();\r\n    let inputValue = \"\"\r\n    if (editItem) {\r\n      inputValue = editItem[paramName]\r\n    }\r\n    return (\r\n      <Modal\r\n        {...otherProps}\r\n        size=\"lg\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Редактировать {type}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={this.onButtonClick}>\r\n            <InputGroup className=\"mb-3\">\r\n              <FormControl defaultValue={inputValue} onChange={this.setInputValue} required\r\n                           placeholder={type}/>\r\n              <InputGroup.Append>\r\n                <Button type=\"submit\" variant=\"primary\">Редактировать</Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Form>\r\n\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default EditModal;","import React from \"react\";\nimport Spinner from \"../components/Spinner\";\nimport {getUsers, removeUser} from \"../actions/userActions\";\nimport {\n  addBreakdownType,\n  editBreakdownType,\n  getBreakdownTypes,\n  removeBreakdownType\n} from \"../actions/breakdownTypeActions\";\nimport {addArea, editArea, getAreas, removeArea} from \"../actions/areaActions\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport AddModal from \"../components/modal/add/AddModal\";\nimport {Button} from \"react-bootstrap\";\nimport {Link} from \"react-router-dom\";\nimport EditModal from \"../components/modal/edit/EditModal\";\nimport history from \"../global/history\"\n\nconst listWithData = (Component, active) => {\n  class WithData extends React.Component {\n\n\n    state = {\n      showAddModal: false,\n      showEditModal: false,\n      editItem: null,\n    };\n\n    toggleAddModal = () => this.setState({showAddModal: !this.state.showAddModal})\n    toggleEditModal = (item) => {\n      if (item.username) {\n        history.push(`/settings/editUser/${item.id}`)\n      } else {\n        this.setState({showEditModal: !this.state.showEditModal, editItem: item})\n      }\n    }\n\n    componentDidMount() {\n      const {getData} = this.update();\n      getData();\n    }\n\n    update() {\n      const {getAreas, editArea, editBreakdownType, errors,getBreakdownTypes, getUsers, area, breakdownType, addArea, addBreakdownType, users, removeArea, removeBreakdownType, removeUser} = this.props;\n      const {showAddModal, showEditModal, editItem} = this.state;\n      let data, getData, onDelete, itemField, addModal, button, editModal;\n      switch (active) {\n        case \"Сотрудники\" :\n          getData = getUsers;\n          data = users;\n          onDelete = removeUser;\n          itemField = \"fullName\"\n          button =\n            <Link to={\"/settings/addUser\"} className=\"btn btn-primary btn-lg btn-block\">Добавить сотрудника</Link>\n          break;\n        case \"Районы\":\n          getData = getAreas;\n          data = area;\n          onDelete = removeArea;\n          itemField = \"caption\";\n          addModal = <AddModal errors={errors} itemField={itemField} onClick={addArea} show={showAddModal} onHide={this.toggleAddModal} type={\"район\"}/>;\n          editModal = <EditModal errors={errors} itemField={itemField} editItem={editItem} onClick={editArea} show={showEditModal} onHide={this.toggleEditModal} type={\"район\"}/>;\n          button = <Button block size={\"lg\"} onClick={this.toggleAddModal} variant=\"primary\">Добавить район</Button>\n          break;\n        case \"Типы поломок\":\n          getData = getBreakdownTypes;\n          data = breakdownType;\n          onDelete = removeBreakdownType;\n          itemField = \"type\";\n          addModal = <AddModal errors={errors} itemField={itemField} show={showAddModal} onClick={addBreakdownType} onHide={this.toggleAddModal} type={\"тип поломки\"}/>;\n          editModal = <EditModal errors={errors} itemField={itemField} editItem={editItem} onClick={editBreakdownType} show={showEditModal} onHide={this.toggleEditModal} type={\"тип поломки\"}/>;\n          button = <Button block size={\"lg\"} onClick={this.toggleAddModal} variant=\"primary\">Добавить тип поломки</Button>\n          break;\n        default:\n          return null;\n      }\n      return {data, getData, onDelete, itemField, addModal, button, editModal}\n    }\n\n    render() {\n      const {data, onDelete, itemField, addModal, button, editModal} = this.update();\n\n      if (data.length) {\n        return <React.Fragment>\n          <Component {...this.props} onDelete={onDelete} data={data} itemField={itemField} onClick={this.toggleEditModal}/>\n          {button}\n          {addModal}\n          {editModal}\n        </React.Fragment>\n      }\n      return <Spinner/>\n    }\n  }\n\n  WithData.propTypes = {\n    getUsers: PropTypes.func.isRequired,\n    getAreas: PropTypes.func.isRequired,\n    getBreakdownTypes: PropTypes.func.isRequired,\n    addArea: PropTypes.func.isRequired,\n    addBreakdownType: PropTypes.func.isRequired,\n    editBreakdownType: PropTypes.func.isRequired,\n    editArea: PropTypes.func.isRequired,\n    removeUser: PropTypes.func.isRequired,\n    removeArea: PropTypes.func.isRequired,\n    removeBreakdownType: PropTypes.func.isRequired,\n    users: PropTypes.array.isRequired,\n    breakdownType: PropTypes.array.isRequired,\n    area: PropTypes.array.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n\n  const mapStateToProps = ({users, breakdownType, area, errors}) => ({\n    users, breakdownType, area, errors\n  });\n\n  return connect(\n    mapStateToProps,\n    {\n      getUsers, getAreas, getBreakdownTypes,\n      removeUser, removeArea, removeBreakdownType,\n      addArea, addBreakdownType, editBreakdownType, editArea\n    }\n  )(WithData);\n};\n\nexport default listWithData;\n\n\n\n","import React from \"react\";\r\nimport {ListGroup} from \"react-bootstrap\";\r\n\r\nconst DataList = ({data, ...otherProps}) => {\r\n  return (\r\n  <ListGroup as=\"ul\">\r\n      {data.map((item) =>\r\n        <DataListItem key={item.id}\r\n                      item={item}\r\n                      {...otherProps}\r\n        />\r\n      )}\r\n  </ListGroup>\r\n  )\r\n};\r\n\r\nconst DataListItem = ({item, onDelete, onClick, itemField}) => {\r\n  return (\r\n    <ListGroup.Item action onClick={() => onClick(item)}>\r\n      <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\"}}>\r\n      {item[itemField]}\r\n      <i className=\"fa fa-ban\" style={{color: \"red\"}} aria-hidden=\"true\"\r\n         onClick={(e) => e.stopPropagation() | onDelete(item)} />\r\n      </div>\r\n    </ListGroup.Item>\r\n  )\r\n}\r\n\r\nexport default DataList;\r\n\r\n","import React, {useState} from \"react\";\nimport listWithData from \"../hoc/listWithData\";\nimport {Col, Container, ListGroup, Row} from \"react-bootstrap\";\nimport DataList from \"./DataList\";\n\nconst Settings = () => {\n  let titles = [\"Сотрудники\", \"Типы поломок\", \"Районы\",];\n  let [active, setActive] = useState(titles[0])\n  const ResultList = listWithData(DataList, active)\n  return (\n    <div className=\"projects\">\n      <Container>\n        <Row>\n          <Col xs={6}>\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n              <span className=\"text-muted\">Настройки</span>\n            </h4>\n            <SettingsMenu titles={titles} active={active} onClick={setActive}/>\n          </Col>\n          <Col xs={6}>\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n              <span className=\"text-muted\">{active}</span>\n            </h4>\n            <ResultList/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\nexport default Settings\n\n\nconst SettingsMenu = ({titles, ...otherProps}) => (\n  <ListGroup as=\"ul\">\n    {titles.map((name, key) =>\n      <SettingsMenuItem key={key}\n                        name={name}\n                        {...otherProps}/>)}\n  </ListGroup>)\n\n\nconst SettingsMenuItem = ({name, active, onClick}) => (\n  <ListGroup.Item as=\"li\" active={active === name} onClick={() => onClick(name)}>\n    {name}\n  </ListGroup.Item>\n)\n\n\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import {ADD_TASK, GET_ERRORS, GET_TASK, GET_TASK_LIST, UPDATE_TASK} from \"./types\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const getTaskList = (closed) => async dispatch => {\r\n  console.log(\"getTaskList\", axios.defaults.headers.common[\"Authorization\"]);\r\n  const res = await axios.get(\"/api/task?closed=\" + closed);\r\n  try {\r\n    dispatch({\r\n      type: GET_TASK_LIST,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const getTask = (taskId) => async dispatch => {\r\n  const res = await axios.get(\"/api/task/\" + taskId);\r\n  try {\r\n    dispatch({\r\n      type: GET_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n\r\n};\r\n\r\nexport const addTask = (task, history) => async dispatch => {\r\n\r\n  const res = await axios.post(\"/api/task\", task);\r\n  try {\r\n    dispatch({\r\n      type: ADD_TASK,\r\n      payload: res.data\r\n    });\r\n\r\n    history.push(\"/dashboard\")\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateTask = (task) => async dispatch => {\r\n\r\n  await axios.put(\"/api/task\", task);\r\n  try {\r\n    dispatch({\r\n      type: UPDATE_TASK,\r\n      payload: task\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n\r\n\r\n};\r\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport {updateTask} from \"../../../actions/taskAction\";\n\nclass Task extends Component {\n  onCloseClick(task) {\n    task.closed = !task.closed\n    this.props.updateTask(task);\n  }\n\n  getUserName = (users) => {\n    return users.map((user, key) =>{\n      let finalString = user.fullName\n      if (users.length > 1 && key !== users.length - 1) {\n        finalString += \", \"\n      }\n      return finalString;\n    })\n  }\n\n  render() {\n    const { task } = this.props;\n    const { flatNumber, street, house } = this.props.task.customer.address;\n    let priorityClass;\n\n    if (task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n    }\n\n    if (task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n    }\n\n    if (task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          {this.getUserName(task.users)}\n        </div>\n        <div className=\"card-body bg-light\">\n          <p className=\"card-text\" style={{marginBottom: 0}}>{street} {house && `д.${house}`} {flatNumber && `кв.${flatNumber}`}</p>\n          <hr/>\n        <p>{task.breakdownType.map( ({type, id}) => <p style={{marginBottom: 0}} key={id} className=\"card-text text-truncate \">\n            {type}\n          </p>)}\n        </p>\n          <Link\n            to={`/updateTask/${task.id}`}\n            className=\"btn btn-primary\"\n          >\n            Посмотреть\n          </Link>\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onCloseClick.bind(\n              this,\n              task\n            )}\n          >\n            {task.closed ? \"Открыть\": \"Закрыть\"}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nTask.propTypes = {\n  updateTask: PropTypes.func.isRequired,\n  task: PropTypes.object.isRequired\n};\nexport default connect(\n  null,\n  { updateTask }\n)(Task);\n","import React, { Component } from \"react\";\nimport Task from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { data } = this.props;\n\n    const tasks = data\n      .filter((task) => !task.closed)\n      .map(task => <Task key={task.id} task={task} />)\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>В ожидание</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>В работе</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Готово</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, {Component, Fragment} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getTaskList} from \"../../actions/taskAction\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // const { id } = this.props.match.params;\n    this.props.getTaskList(false);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({errors: nextProps.errors});\n    }\n  }\n\n  render() {\n    const {tasks} = this.props;\n    const {errors} = this.state;\n    let BoardContent;\n\n    const boardAlgorithm = (errors, tasks) => {\n      if (tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              Список пока пуст\n            </div>\n          );\n        }\n      } else {\n        return <Backlog data={tasks}/>;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, tasks);\n    const {user} = this.props.security;\n    return (\n      <div className=\"container\">\n        {user.role !== \"USER\" &&\n        <Fragment>\n          <Link to={`/addTask`} className=\"btn btn-primary mb-3\" style={{marginRight: \"20px\"}}>\n            <i className=\"fas fa-plus-circle\"> Создать заявку </i>\n          </Link>\n          < Link to={`/report`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Сформировать отчет </i>\n          </Link>\n          <br/>\n          <hr/>\n        </Fragment>\n        }\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  getTaskList: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tasks: state.tasks,\n  errors: state.errors,\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  {getTaskList}\n)(ProjectBoard);\n","import React, {PureComponent} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {addTask} from \"../../../actions/taskAction\";\nimport Select from \"react-select\";\nimport {getBreakdownTypes} from \"../../../actions/breakdownTypeActions\";\nimport {getAreas} from \"../../../actions/areaActions\";\nimport {getUsers} from \"../../../actions/userActions\";\nimport {Button} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport ru from 'date-fns/locale/ru'\n\nclass AddTask extends PureComponent {\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      status: \"\",\n      priority: 0,\n      dueDate: new Date(),\n      breakdownType: [],\n      area: {},\n      flatNumber: \"\",\n      street: \"\",\n      fullName: \"\",\n      house: \"\",\n      phone: \"\",\n      users: [],\n      errors: {},\n      isOpen: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {getBreakdownTypes, getAreas, getUsers} = this.props;\n    getBreakdownTypes();\n    getAreas();\n    getUsers(\"USER\");\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({errors: nextProps.errors});\n    }\n  }\n\n  handleChangeBreakdown = (breakdownType) => {\n    this.setState({breakdownType});\n  }\n\n  handleChangeUsers = (users) => {\n    this.setState({users});\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      breakdownType: this.convertOptionToBreakdown(this.state.breakdownType),\n      area: this.convertOptionToArea(this.state.area),\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      customer: this.getCustomer(),\n      users: this.convertOptionToUsers(this.state.users),\n    };\n\n    this.props.addTask(\n      newTask,\n      this.props.history\n    );\n  }\n\n  convertOptionToArea = (choose) => {\n    const {area} = this.props;\n    if (choose) {\n      const result = area.find(elem => elem.id === parseInt(choose, 10))\n      if (result) {\n        return result;\n      }\n    }\n\n  }\n\n\n  convertOptionToBreakdown = (breakdownChooseList) => {\n    const {breakdownType} = this.props;\n    const result = []\n    breakdownChooseList.forEach(choose => {\n      const chooseBreakdown = breakdownType.find(type => type.id === choose.value)\n      if (chooseBreakdown) {\n        result.push(chooseBreakdown)\n      }\n    })\n\n    return result;\n  }\n\n  convertOptionToUsers = (userChooseList) => {\n    const {users} = this.props;\n    const result = []\n    userChooseList.forEach(choose => {\n      const chooseUser = users.find(user => user.id === choose.value)\n      if (chooseUser) {\n        result.push(chooseUser)\n      }\n    })\n    return result;\n  }\n\n  breakdownToOptions = (breakdowns) => {\n    return breakdowns.map(breakdown => ({value: breakdown.id, label: breakdown.type}));\n  }\n\n  userToOptions = (users) => {\n    return users\n      .filter(user => user.role === \"USER\")\n      .map(user => ({value: user.id, label: user.fullName}));\n  }\n\n  getCustomer = () => {\n    const {flatNumber, street, fullName, house, phone} = this.state;\n    return {\n      fullName,\n      phone,\n      address: {flatNumber, street, house}\n    };\n  }\n\n  toggleCalendar = (e) => {\n    e && e.preventDefault()\n    this.setState({isOpen: !this.state.isOpen})\n  }\n\n  formatDate = (date) => {\n    var monthNames = [\n      \"Январь\", \"Феварль\", \"Март\",\n      \"Апрель\", \"Май\", \"Июнь\", \"Июль\",\n      \"Август\", \"Сентябрь\", \"Октябрь\",\n      \"Ноябрь\", \"Декабрь\"\n    ];\n\n    var day = date.getDate();\n    var monthIndex = date.getMonth();\n    var year = date.getFullYear();\n\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\n  }\n\n  handleChangeDate = (dueDate) => {\n    this.setState({\n      dueDate,\n    });\n    this.toggleCalendar()\n  }\n\n  render() {\n    // const { errors } = this.state;\n    const {breakdownType, area, users} = this.props;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={\"/dashboard\"} className=\"btn btn-light\">\n                Назад к заявкам\n              </Link>\n              <h4 className=\"display-4 text-center\">Добавить заявку</h4>\n              <form onSubmit={this.onSubmit} className=\"needs-validation\">\n\n                <div className=\"form-group\">\n                  <Select\n                    placeholder={\"Тип поломки\"}\n                    value={this.state.breakdownType}\n                    onChange={this.handleChangeBreakdown}\n                    options={this.breakdownToOptions(breakdownType)}\n                    isMulti\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <Select\n                    placeholder={\"Выберите мастера\"}\n                    value={this.state.users}\n                    onChange={this.handleChangeUsers}\n                    options={this.userToOptions(users)}\n                    isMulti\n                    required\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type={\"text\"}\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"ФИО заказчика\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6\">\n                      <input\n                        type={\"text\"}\n                        className=\"form-control form-control-sm\"\n                        placeholder=\"Улицы\"\n                        name=\"street\"\n                        value={this.state.street}\n                        onChange={this.onChange}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-3\">\n                      <input\n                        type={\"text\"}\n                        className=\"form-control form-control-sm\"\n                        placeholder=\"Дом\"\n                        name=\"house\"\n                        value={this.state.house}\n                        onChange={this.onChange}\n                        required\n                      />\n                    </div>\n                    <div className=\"col-md-3\">\n                      <input\n                        type={\"text\"}\n                        className=\"form-control form-control-sm\"\n                        placeholder=\"Квартира\"\n                        name=\"flatNumber\"\n                        value={this.state.flatNumber}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                  </div>\n\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type={\"text\"}\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"Контактный телефон\"\n                    name=\"phone\"\n                    value={this.state.phone}\n                    onChange={this.onChange}\n                    required\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"area\"\n                    value={this.state.area}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Выберите район</option>\n                    {area.map(elem => <option key={elem.id} value={elem.id}>{elem.caption}</option>)}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Выберите приоритет</option>\n                    <option value={1}>Высокий</option>\n                    <option value={2}>Средний</option>\n                    <option value={3}>Низкий</option>\n                  </select>\n                </div>\n\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Статус</option>\n                    <option value=\"TO_DO\">В ожидание</option>\n                    <option value=\"IN_PROGRESS\">В работе</option>\n                    <option value=\"DONE\">Готово</option>\n                  </select>\n                </div>\n\n                <h6>Срок выполнения</h6>\n                <div className=\"form-group\">\n                  <Button block variant=\"outline-secondary\"\n                          onClick={this.toggleCalendar}\n                  >{this.formatDate(this.state.dueDate)}\n                  </Button>\n                  {\n                    this.state.isOpen && (\n                      <DatePicker\n                        selected={this.state.dueDate}\n                        onChange={this.handleChangeDate}\n                        dateFormat=\"dd-MM-yyyy\"\n                        locale={ru}\n                        withPortal\n                        inline\n                        onClickOutside={this.toggleCalendar}\n                      />)\n                  }\n\n                </div>\n\n                <input\n                  type=\"submit\" value={\"Добавить\"}\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddTask.propTypes = {\n  addTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  breakdownType: PropTypes.array.isRequired,\n  area: PropTypes.array.isRequired,\n  getBreakdownTypes: PropTypes.func.isRequired,\n  getAreas: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  getUsers: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  breakdownType: state.breakdownType,\n  area: state.area,\n  users: state.users\n});\n\nexport default connect(\n  mapStateToProps,\n  {addTask, getBreakdownTypes, getAreas, getUsers}\n)(AddTask);\n\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getTask, updateTask} from \"../../../actions/taskAction\";\nimport Select from \"react-select\";\nimport {getBreakdownTypes} from \"../../../actions/breakdownTypeActions\";\nimport {getAreas} from \"../../../actions/areaActions\";\nimport {getUsers} from \"../../../actions/userActions\";\nimport {Button} from \"react-bootstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport ru from 'date-fns/locale/ru'\n\nclass UpdateTask extends Component {\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      status: \"\",\n      priority: 0,\n      dueDate: new Date(),\n      breakdownType: [],\n      area: {},\n      flatNumber: \"\",\n      street: \"\",\n      fullName: \"\",\n      addressId: \"\",\n      house: \"\",\n      phone: \"\",\n      users: [],\n      errors: {},\n      isOpen: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const {getBreakdownTypes, getAreas, getUsers} = this.props;\n    const {id} = this.props.match.params;\n    this.props.getTask(id);\n    getBreakdownTypes();\n    getAreas();\n    getUsers();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({errors: nextProps.errors});\n    }\n    if (nextProps.tasks && nextProps.tasks.length > 0) {\n      const task = nextProps.tasks.find((task => task.id === parseInt(this.props.match.params.id, 10)));\n\n      const {\n        id,\n        area,\n        breakdownType,\n        status,\n        priority,\n        dueDate,\n        customer: {fullName, phone, address},\n        createAt,\n        users\n      } = task;\n\n      this.setState({\n        id,\n        area: area,\n        breakdownType: this.breakdownToOptions(breakdownType),\n        status,\n        priority,\n        dueDate: new Date(dueDate),\n        fullName,\n        phone,\n        house: address.house,\n        flatNumber: address.flatNumber,\n        addressId: address.id,\n        street: address.street,\n        createAt,\n        users: this.userToOptions(users),\n        customerId: task.customer.id\n      });\n\n    }\n\n  }\n\n  handleChangeBreakdown = (breakdownType) => {\n    this.setState({breakdownType});\n  }\n\n  handleChangeUsers = (users) => {\n    this.setState({users});\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateTask = {\n      breakdownType: this.convertOptionToBreakdown(this.state.breakdownType),\n      area: this.state.area,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      customer: this.getCustomer(),\n      users: this.convertOptionToUsers(this.state.users),\n      id: this.state.id\n    };\n\n    this.props.updateTask(\n      updateTask\n    );\n  }\n\n  convertOptionToBreakdown = (breakdownChooseList) => {\n    const {breakdownType} = this.props;\n    const result = []\n    breakdownChooseList.forEach(choose => {\n      const chooseBreakdown = breakdownType.find(type => type.id === choose.value)\n      if (chooseBreakdown) {\n        result.push(chooseBreakdown)\n      }\n    })\n\n    return result;\n  }\n\n  convertOptionToUsers = (userChooseList) => {\n    const {users} = this.props;\n    const result = []\n    userChooseList.forEach(choose => {\n      const chooseUser = users.find(user => user.id === choose.value)\n      if (chooseUser) {\n        result.push(chooseUser)\n      }\n    })\n    return result;\n  }\n\n  breakdownToOptions = (breakdowns) => {\n    return breakdowns.map(breakdown => ({value: breakdown.id, label: breakdown.type}));\n  }\n\n  userToOptions = (users) => {\n    return users\n      .filter(user => user.role === \"USER\")\n      .map(user => ({value: user.id, label: user.fullName}));\n  }\n\n  getCustomer = () => {\n    const {flatNumber, street, fullName, house, phone, customerId, addressId} = this.state;\n    return {\n      id: customerId,\n      fullName,\n      phone,\n      address: {id: addressId, flatNumber, street, house}\n    };\n  }\n\n  toggleCalendar = (e) => {\n    e && e.preventDefault()\n    this.setState({isOpen: !this.state.isOpen})\n  }\n\n  formatDate = (date) => {\n    var monthNames = [\n      \"Январь\", \"Феварль\", \"Март\",\n      \"Апрель\", \"Май\", \"Июнь\", \"Июль\",\n      \"Август\", \"Сентябрь\", \"Октябрь\",\n      \"Ноябрь\", \"Декабрь\"\n    ];\n    var day = date.getDate();\n    var monthIndex = date.getMonth();\n    var year = date.getFullYear();\n\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\n  }\n\n\n  handleChangeDate = (dueDate) => {\n    this.setState({\n      dueDate,\n    });\n    this.toggleCalendar()\n  }\n\n\n  render() {\n    const {breakdownType, area, users} = this.props;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={\"/dashboard\"} className=\"btn btn-light\">\n                Назад к заявкам\n              </Link>\n              <h4 className=\"display-4 text-center\">Изменить заявку</h4>\n              <form onSubmit={this.onSubmit}>\n\n                <div className=\"form-group\">\n                  <Select\n                    placeholder={\"Тип поломки\"}\n                    value={this.state.breakdownType}\n                    onChange={this.handleChangeBreakdown}\n                    options={this.breakdownToOptions(breakdownType)}\n                    isMulti\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <Select\n                    placeholder={\"Выберите мастера\"}\n                    value={this.state.users}\n                    onChange={this.handleChangeUsers}\n                    options={this.userToOptions(users)}\n                    isMulti\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type={\"text\"}\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"ФИО заказчика\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <div className=\"form-row\">\n                    <div className=\"col-md-6\">\n                      <input\n                        type={\"text\"}\n                        className=\"form-control form-control-sm\"\n                        placeholder=\"Улицы\"\n                        name=\"street\"\n                        value={this.state.street}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <div className=\"col-md-3\">\n                      <input\n                        type={\"text\"}\n                        className=\"form-control form-control-sm\"\n                        placeholder=\"Дом\"\n                        name=\"house\"\n                        value={this.state.house}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                    <div className=\"col-md-3\">\n                      <input\n                        type={\"text\"}\n                        className=\"form-control form-control-sm\"\n                        placeholder=\"Квартира\"\n                        name=\"flatNumber\"\n                        value={this.state.flatNumber}\n                        onChange={this.onChange}\n                      />\n                    </div>\n                  </div>\n\n                </div>\n\n                <div className=\"form-group\">\n                  <input\n                    type={\"text\"}\n                    className=\"form-control form-control-sm\"\n                    placeholder=\"Контактный телефон\"\n                    name=\"phone\"\n                    value={this.state.phone}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"area\"\n                    value={this.state.area.id}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Выберите район</option>\n                    {area.map(elem => <option key={elem.id} value={elem.id}>{elem.caption}</option>)}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Выберите приоритет</option>\n                    <option value={1}>Высокий</option>\n                    <option value={2}>Средний</option>\n                    <option value={3}>Низкий</option>\n                  </select>\n                </div>\n\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-sm\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Статус</option>\n                    <option value=\"TO_DO\">В ожидание</option>\n                    <option value=\"IN_PROGRESS\">В работе</option>\n                    <option value=\"DONE\">Готово</option>\n                  </select>\n                </div>\n\n                <h6>Срок выполнения</h6>\n                <div className=\"form-group\">\n                  <Button block variant=\"outline-secondary\"\n                          onClick={this.toggleCalendar}\n                  >{this.formatDate(this.state.dueDate)}\n                  </Button>\n                  {\n                    this.state.isOpen && (\n                      <DatePicker\n                        selected={this.state.dueDate}\n                        onChange={this.handleChangeDate}\n                        dateFormat=\"dd-MM-yyyy\"\n                        locale={ru}\n                        withPortal\n                        inline\n                        onClickOutside={this.toggleCalendar}\n                      />)\n                  }\n\n                </div>\n\n                <input\n                  type=\"submit\" value={\"Сохранить\"}\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateTask.propTypes = {\n  updateTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  breakdownType: PropTypes.array.isRequired,\n  area: PropTypes.array.isRequired,\n  getBreakdownTypes: PropTypes.func.isRequired,\n  getAreas: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n  tasks: PropTypes.array.isRequired,\n  getUsers: PropTypes.func.isRequired,\n  getTask: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({errors, breakdownType, area, users, tasks}) => ({\n  errors,\n  breakdownType,\n  area,\n  users,\n  tasks\n});\n\nexport default connect(\n  mapStateToProps,\n  {updateTask, getBreakdownTypes, getAreas, getUsers, getTask}\n)(UpdateTask);\n\n","import React, {Component} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {editUser} from \"../../actions/securityActions\";\r\nimport {getUsers} from \"../../actions/userActions\";\r\n\r\nclass EditUser extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      role: \"USER\",\r\n      id: 0,\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers()\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {match} = this.props\r\n    if (nextProps.errors) {\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n\r\n    if (nextProps.users) {\r\n      const user = nextProps.users.find(u => u.id === parseInt(match.params.id, 10))\r\n      // debugger;\r\n      const {username, fullName, id, role} = user;\r\n      this.setState({username, fullName, id, role})\r\n    }\r\n\r\n\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const user = {\r\n      id: this.state.id,\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n      role: this.state.role\r\n    };\r\n\r\n    this.props.editUser(user);\r\n  }\r\n\r\n  onChange(e) {\r\n\r\n    if (this.state.errors[e.target.name]) {\r\n      const errors = {...this.state.errors}\r\n      errors[e.target.name] = \"\";\r\n      this.setState({errors});\r\n    }\r\n\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/settings`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Назад к настройкам\r\n              </Link>\r\n              <h1 className=\"display-4 text-center\">Регистрация</h1>\r\n              <p className=\"lead text-center\">Создать аккаунт</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Имя\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Логин\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Пароль\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Подтверждение пароля\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"role\"\r\n                    value={this.state.role}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={\"USER\"}>Монтажник</option>\r\n                    <option value={\"ADMIN\"}>Диспетчер</option>\r\n                    <option value={\"OWNER\"}>Администратор</option>\r\n                  </select>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\"/>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEditUser.propTypes = {\r\n  editUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({errors, users}) => ({\r\n  errors, users\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  {editUser, getUsers}\r\n)(EditUser);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Select from \"react-select\";\r\nimport {getUsers} from \"../actions/userActions\";\r\nimport {getBreakdownTypes} from \"../actions/breakdownTypeActions\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport ru from 'date-fns/locale/ru';\r\nimport {Button, Col, Form, Row} from \"react-bootstrap\";\r\nimport history from \"../global/history\"\r\n\r\nclass ReportSettings extends Component {\r\n\r\n  getStartDate = () => {\r\n    const date = new Date();\r\n    date.setMonth(date.getMonth() - 1);\r\n    return date;\r\n  }\r\n\r\n  state = {\r\n    start: this.getStartDate(),\r\n    end: new Date(),\r\n    breakdownType: [],\r\n    user: null,\r\n    status: \"\",\r\n    isOpenStart: false,\r\n    isOpenEnd: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {getBreakdownTypes, getUsers, users, breakdownType} = this.props;\r\n    if (users.length === 0) {\r\n      getUsers(\"USER\");\r\n    }\r\n    if (breakdownType.length === 0) {\r\n      getBreakdownTypes();\r\n    }\r\n  }\r\n\r\n  handleChangeBreakdown = (breakdownType) => {\r\n    this.setState({breakdownType});\r\n  }\r\n\r\n  handleChangeUsers = (user) => {\r\n    this.setState({user});\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n  }\r\n\r\n  breakdownToOptions = (breakdowns) => {\r\n    let result = breakdowns.map(breakdown => ({value: breakdown.id, label: breakdown.type}));\r\n    result.unshift({value: 0, label: \"все поломки\"})\r\n    return result;\r\n  }\r\n\r\n  userToOptions = (users) => {\r\n    return users\r\n      .filter(user => user.role === \"USER\")\r\n      .map(user => ({value: user.id, label: user.fullName}));\r\n  }\r\n\r\n  handleChangeStartDate = (date) => {\r\n    this.setState({\r\n      start: date\r\n    });\r\n    this.toggleCalendarStart()\r\n  }\r\n\r\n  handleChangeEndDate = (date) => {\r\n    this.setState({\r\n      end: date\r\n    });\r\n    this.toggleCalendarEnd()\r\n  }\r\n\r\n\r\n  toggleCalendarStart = (e) => {\r\n    e && e.preventDefault()\r\n    this.setState({isOpenStart: !this.state.isOpenStart})\r\n  }\r\n\r\n  toggleCalendarEnd = (e) => {\r\n    e && e.preventDefault()\r\n    this.setState({isOpenEnd: !this.state.isOpenEnd})\r\n  }\r\n\r\n  formatDate = (date) => {\r\n    var monthNames = [\r\n      \"Январь\", \"Феварль\", \"Март\",\r\n      \"Апрель\", \"Май\", \"Июнь\", \"Июль\",\r\n      \"Август\", \"Сентябрь\", \"Октябрь\",\r\n      \"Ноябрь\", \"Декабрь\"\r\n    ];\r\n\r\n    var day = date.getDate();\r\n    var monthIndex = date.getMonth();\r\n    var year = date.getFullYear();\r\n\r\n    return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n  }\r\n\r\n  convertOptionToUsers = (userChooseList) => {\r\n    const {users} = this.props;\r\n    let result = []\r\n    userChooseList.forEach(choose => {\r\n      const chooseUser = users.find(user => user.id === choose.value)\r\n\r\n      if (chooseUser) {\r\n        return result.push(chooseUser.id)\r\n      }\r\n    })\r\n    return result;\r\n  }\r\n\r\n  convertOptionToBreakdown = (breakdownChooseList) => {\r\n    const {breakdownType} = this.props;\r\n    const result = []\r\n    breakdownChooseList.forEach(choose => {\r\n\r\n      if (choose.value === 0) {\r\n        result.push(choose.value)\r\n        return;\r\n      }\r\n\r\n      const chooseBreakdown = breakdownType.find(type => type.id === choose.value)\r\n\r\n      if (chooseBreakdown) {\r\n        result.push(chooseBreakdown.id)\r\n      }\r\n    })\r\n\r\n    return result;\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const reportSettings = {\r\n      breakdownType: this.convertOptionToBreakdown(this.state.breakdownType),\r\n      status: this.state.status,\r\n      start: this.state.start,\r\n      end: this.state.end,\r\n      users: this.convertOptionToUsers(this.state.user),\r\n    };\r\n\r\n    history.push(\"/report/\" + btoa(JSON.stringify(reportSettings)))\r\n\r\n  }\r\n\r\n  render() {\r\n    const {breakdownType, users} = this.props;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={\"/dashboard\"} className=\"btn btn-light\" style={{marginRight: \"10px\"}}>\r\n                Назад к заявкам\r\n              </Link>\r\n              <Link to={\"/adresses\"} className=\"btn btn-light\">\r\n                Адреса жителей\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Создание отчета</h4>\r\n              <Form onSubmit={this.onSubmit}>\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                <Form.Label column sm={2}>\r\n                  Начало\r\n                </Form.Label>\r\n                <Col sm={10}>\r\n                  <Button block variant=\"outline-secondary\"\r\n                          onClick={this.toggleCalendarStart}\r\n                  >{this.formatDate(this.state.start)}</Button>\r\n                </Col>\r\n              </Form.Group>\r\n\r\n                {\r\n                  this.state.isOpenStart && (\r\n                    <DatePicker\r\n                      selected={this.state.start}\r\n                      onChange={this.handleChangeStartDate}\r\n                      dateFormat=\"dd-MM-yyyy\"\r\n                      locale={ru}\r\n                      withPortal\r\n                      inline\r\n                      onClickOutside={this.toggleCalendarStart}\r\n                    />)\r\n                }\r\n\r\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\r\n                  <Form.Label column sm={2}>\r\n                    Конец\r\n                  </Form.Label>\r\n                  <Col sm={10}>\r\n                    <Button block variant=\"outline-secondary\"\r\n                            onClick={this.toggleCalendarEnd}\r\n                    >{this.formatDate(this.state.end)}</Button>\r\n                  </Col>\r\n                </Form.Group>\r\n\r\n                {\r\n                  this.state.isOpenEnd && (\r\n                    <DatePicker\r\n                      selected={this.state.end}\r\n                      onChange={this.handleChangeEndDate}\r\n                      dateFormat=\"dd-MM-yyyy\"\r\n                      locale={ru}\r\n                      withPortal\r\n                      inline\r\n                      onClickOutside={this.toggleCalendarEnd}\r\n                    />)\r\n                }\r\n\r\n                <div className=\"form-group\">\r\n                  <Select\r\n                    placeholder={\"Тип поломки\"}\r\n                    value={this.state.breakdownType}\r\n                    onChange={this.handleChangeBreakdown}\r\n                    options={this.breakdownToOptions(breakdownType)}\r\n                    isMulti\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <Select\r\n                    placeholder={\"Выберите мастера\"}\r\n                    value={this.state.users}\r\n                    onChange={this.handleChangeUsers}\r\n                    options={this.userToOptions(users)}\r\n                    isMulti\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-sm\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Статус</option>\r\n                    <option value=\"ALL\">Все</option>\r\n                    <option value=\"TO_DO\">В ожидание</option>\r\n                    <option value=\"IN_PROGRESS\">В работе</option>\r\n                    <option value=\"DONE\">Готово</option>\r\n\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\" value={\"Сформировать\"}\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nReportSettings.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  breakdownType: PropTypes.array.isRequired,\r\n  getBreakdownTypes: PropTypes.func.isRequired,\r\n  users: PropTypes.array.isRequired,\r\n  getUsers: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  breakdownType: state.breakdownType,\r\n  users: state.users\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getUsers, getBreakdownTypes}\r\n)(ReportSettings);\r\n","export const CONFIG = {\r\n  URL: \"https://secure-refuge-10466.herokuapp.com/\"\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport {downloadReports, getReports} from \"../actions/reportActions\";\r\nimport history from \"../global/history\"\r\nimport {Badge, Button, Container, Table} from \"react-bootstrap\";\r\n\r\nclass Report extends Component {\r\n  state = {\r\n    report: null\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {match, getReports} = this.props\r\n    if (match.params.reportId) {\r\n      const report = JSON.parse(atob(match.params.reportId))\r\n      this.setState({report})\r\n      getReports(report)\r\n    } else {\r\n      history.push(\"/report\")\r\n    }\r\n  }\r\n\r\n  statusConverter = (status) => {\r\n    switch (status) {\r\n      case \"TO_DO\" :\r\n        return \"В ожидание\"\r\n      case \"IN_PROGRESS\" :\r\n        return \"В работе\"\r\n      case \"DONE\" :\r\n        return \"Готово\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {reports} = this.props;\r\n    return (\r\n      <Container>\r\n\r\n        {reports.map(report => {\r\n          const {breakdownType, createAt, id, users, customer, status} = report\r\n          const {street, house, flatNumber} = customer.address;\r\n          // let currentUser = users.find(user => user.id = userId);\r\n          return <div key={id}>\r\n            <Table bordered striped responsive={\"md\"}>\r\n              <thead>\r\n              <tr>\r\n                <th align={\"center\"} colSpan={2}>Мастер:  {users.map((user, key) =>{\r\n                  let finalString = user.fullName\r\n                  if (users.length > 1 && key !== users.length - 1) {\r\n                    finalString += \", \"\r\n                  }\r\n                  return finalString;\r\n                })}</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr>\r\n                <td>Дата создания</td>\r\n                <td>{createAt}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Типы поломок</td>\r\n                <td>{breakdownType.map(breakType => breakType.type).join(\", \")}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>ФИО заказчика</td>\r\n                <td>{customer.fullName}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Телефон</td>\r\n                <td>{customer.phone}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Адрес</td>\r\n                <td>{street} {house} {flatNumber}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Статус</td>\r\n                <td>{this.statusConverter((status))}</td>\r\n              </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n        })\r\n        }\r\n        <div style={{marginTop: \"15px\"}}>\r\n          {reports.length !== 0 &&\r\n            <Button type={\"submit\"} variant=\"primary\" style={{marginRight: \"15px\"}} onClick={() => {\r\n\r\n              this.props.downloadReports(this.props.match.params.reportId)\r\n            }}>Сохранить в Word</Button>\r\n          }\r\n          <Button variant=\"secondary\" disabled>\r\n            Всего количество: <Badge variant=\"light\">{reports.length}</Badge>\r\n          </Button>\r\n\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nReport.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  reports: PropTypes.array.isRequired,\r\n  getReports: PropTypes.func.isRequired,\r\n  downloadReports: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  reports: state.reports\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getReports, downloadReports}\r\n)(Report);","import {GET_REPORT} from \"./types\";\r\nimport axios from \"axios/index\";\r\nimport {CONFIG} from \"../global/settings\";\r\n\r\nexport const getReports = (report) => async dispatch => {\r\n  const res = await axios.post(\"/api/report\", report);\r\n  dispatch({\r\n    type: GET_REPORT,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const downloadReports = (reportInfo) => async dispatch => {\r\n  const link = document.createElement(\"a\");\r\n  link.download = \"download\";\r\n  link.href = `${CONFIG.URL}/api/report/${reportInfo}`;\r\n  link.click();\r\n};\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getTaskList} from \"../actions/taskAction\";\r\nimport Task from \"../components/ProjectBoard/ProjectTasks/ProjectTask\"\r\nimport {Col} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ClosedTasks extends Component {\r\n  componentDidMount() {\r\n    this.props.getTaskList(true);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {tasks} = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={\"/dashboard\"} className=\"btn btn-light\">\r\n                Назад к заявкам\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Закрытые заявки</h4>\r\n\r\n              {tasks\r\n                .filter((task) => task.closed)\r\n                .map(task => <Col>\r\n                  <Task key={task.id} task={task}/>\r\n                </Col>)\r\n              }\r\n            </div>\r\n          </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nClosedTasks.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  getTaskList: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  tasks: state.tasks,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {getTaskList}\r\n)(ClosedTasks);\r\n","import React, {Component} from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport {Badge, Button, Container, Table} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport {CONFIG} from \"../global/settings\";\r\nexport  default class Addresses extends Component {\r\n  state = {\r\n    address: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n      .then(result => {\r\n        this.setState({address: result.data})\r\n      })\r\n\r\n  }\r\n\r\n  fetchData = () => {\r\n    return axios.get(\"/api/address\")\r\n  }\r\n\r\n  downloadResult = () => {\r\n    const link = document.createElement(\"a\");\r\n    link.download = \"download\";\r\n    link.href = `${CONFIG.URL}/api/address/download`;\r\n    link.click();\r\n  }\r\n\r\n  render() {\r\n    const {address} = this.state;\r\n    return (\r\n      <Container>\r\n        <Table bordered striped responsive={\"md\"}>\r\n          <thead>\r\n          <tr>\r\n            <th>id</th>\r\n            <th>ФИО</th>\r\n            <th>Адрес</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {address.length && address.map((elem, key) => {\r\n            const {street, house, flatNumber, fullName} = elem;\r\n            return (\r\n              <tr key={key}>\r\n                <td>{key + 1}</td>\r\n                <td>{fullName}</td>\r\n                <td>{street} {house} {flatNumber}</td>\r\n              </tr>)\r\n          })}\r\n          </tbody>\r\n\r\n        </Table>\r\n        <div style={{marginTop: \"15px\"}}>\r\n          {address.length !== 0 &&\r\n          <Button type={\"submit\"} variant=\"primary\" style={{marginRight: \"15px\"}} onClick={() => {\r\n            this.downloadResult()\r\n          }}>Сохранить в Word</Button>\r\n          }\r\n          <Button variant=\"secondary\" disabled>\r\n            Всего количество: <Badge variant=\"light\">{address.length}</Badge>\r\n          </Button>\r\n\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Route, Switch, HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./store\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport AuthService from \"./service/AuthService\";\nimport {SET_CURRENT_USER} from \"./actions/types\";\nimport {logout} from \"./actions/securityActions\";\nimport Settings from \"./components/Settings\";\nimport SecuredRoute from \"./hoc/SecureRoute\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddTask from \"./components/ProjectBoard/ProjectTasks/AddTask\";\nimport UpdateTask from \"./components/ProjectBoard/ProjectTasks/UpdateTask\";\nimport history from \"./global/history\"\nimport EditUser from \"./components/UserManagement/EditUser\";\nimport ReportSettings from \"./components/ReportSettings\";\nimport Report from \"./components/Report\";\nimport ClosedTasks from \"./components/ClosedTasks\";\nimport Addresses from \"./components/Addresses\";\nimport {CONFIG} from \"./global/settings\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = CONFIG.URL;\n\nlet jwtToken = localStorage.jwtToken;\nconsole.log('jwtToken', jwtToken);\ndebugger; //eslint-disable-line\nif (jwtToken) {\n  console.log('if (jwtToken)');\n  AuthService.setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    history.push(\"/\");\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter history={history}>\n          <div className=\"App\">\n            <Header/>\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing}/>\n\n            <Route exact path=\"/login\" component={Login}/>\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute\n                exact\n                path=\"/dashboard\"\n                component={ProjectBoard}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/dashboard/closed\"\n                component={ClosedTasks}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/settings\"\n                component={Settings}\n              />\n              <SecuredRoute\n                exact\n                path=\"/settings/addUser\"\n                component={Register}\n              />\n              <SecuredRoute\n                exact\n                path=\"/settings/editUser/:id\"\n                component={EditUser}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/report\"\n                component={ReportSettings}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/report/:reportId\"\n                component={Report}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/addTask\"\n                component={AddTask}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/updateTask/:id\"\n                component={UpdateTask}\n              />\n\n              <SecuredRoute\n                exact\n                path=\"/adresses\"\n                component={Addresses}\n              />\n\n            </Switch>\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}